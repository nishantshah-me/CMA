openapi: 3.0.1
info:
  description: This is detailed rest api document for CMA mobile project. It must be followed by both (backend and frontend) developers to match the highest quality of the work.
    Author - Nishant Shah
  version: 1.0.0
  title: CMA API specification 
  contact:
    name: SPOC
    email: saleh.alhashmi@cma.gov.om
  license:
    name: License - private only
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about CMA
  url: https://www.cma.gov.om/
servers:
  - url: https://cma.gov.om/api/v1
  - url: https://localhost/v1
  - url: http://localhost/v1
tags:
  - name: User
    description: Operations about user 
  - name: Insurance
    description: Operations about insurance complaint
  - name: News and Events
    description: Operations about news and events 
  - name: Injury 
    description: Operations about injury fund.
  - name: Whistleblower
    description: Operations about whistleblower service.
  - name: Board of director
    description: Operation about board of director.
  - name: Settings
    description: settings. 
    
paths:
  /injury:
    post:
      tags:
        - Injury
      summary: Injury help
      description: This can only be done by the logged in user.
      operationId: createInjuryFundRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InjurtRequest'
        required: true
      parameters: 
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
      responses:
        "201":
          description: created successfully.
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "400":
          description: Bad input - Validation failed
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []  
        
  /faq:
    get:
      tags:
        - Settings
      summary: To get faq from CMA
      description: This can only be done by the access tokened user.
      operationId: sendFAQ
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        - in: query
          name: page
          description: Page number 
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: items per page
          required: true
          schema:
            type: integer
        - in: query
          name: type_id
          description: FAQ type id
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FAQ"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
  /contact:
    post:
      tags:
        - Settings
      summary: To contact CMA
      description: This can only be done by the access tokened user.
      operationId: sendFeedback
      requestBody:
        content:
         application/x-www-form-urlencoded:
            schema:
              type: object
              required: 
                - name
                - email
                - phone
                - details
              properties:
                name:          
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                  format: phone
                details:
                  type: string
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SuccessResponse"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
  /news:
    get:
      tags:
        - News and Events
      summary: To get news from CMA
      description: This can only be done by the access tokened user.
      operationId: sendNews
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        - in: query
          name: page
          description: Page number 
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: items per page
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
  /events:
    get:
      tags:
        - News and Events
      summary: To get events from CMA
      description: This can only be done by the any user.
      operationId: sendEvent
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        - in: query
          name: page
          description: Page number 
          required: true
          schema:
            type: integer
        - in: query
          name: limit
          description: items per page
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
        
  /user/access_token:
    get:
      tags:
        - User
      summary: To get access token for user's device
      description: This can only be done by the any user.
      operationId: sendToken
      parameters:
        - in: query
          name: UUID
          description: Unique identifier of android/ios device
          required: true
          schema:
            type: string
  
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/push_token:
    post:
      tags:
        - User
      summary: Add user's push token
      description: This can only be done by the logged in user.
      operationId: addPushToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushNotification"
        description: Created user object
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "401":
          description: unauthorized - token expired
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
 
  /insurance/complaint:
    post:
      tags:
        - Insurance
      summary: Add user's insurance complaint
      description: This can only be done by the logged in user.
      operationId: createInsuranceComplaint
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InsuranceComplaintRequest"
        description: Created insurance complaint object
        required: true
      parameters: 
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
      responses:
        "201":
          description: created successfully.
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "400":
          description: Bad input - Validation failed
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []
  /insurance/complaint/:
    get:
      deprecated: true
      tags:
        - Insurance
      summary: Gives all insurance complaints. 
      responses:
        "405":
          description: service not avialable
      security:
        - access_token: []
        
  /insurance/complaint/{complaint_id}:
    get:
      tags:
        - Insurance
      summary: See the status of insurance complaint.
      description: This can only be done by the tokened in user.
      operationId: statusInsuranceComplaint
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        - in: path
          name: complaint_id
          description: Created user object
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceComplaintInfo'
        "404":
          description: ID not found
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []

  /whistleblower/complaint:
    post:
      tags:
        - Whistleblower
      summary: Add user's whistleblower complaint
      description: This can only be done by the logged in user.
      operationId: createWishtleblowerComplaint
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WhistleblowerComplaintRequest'
        description: Created insurance complaint object
        required: true
      parameters: 
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
      responses:
        "201":
          description: created successfully.
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "400":
          description: Bad input - Validation failed
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []   
        
  /whistleblower/complaint/:
    get:
      deprecated: true
      tags:
        - Whistleblower
      summary: Gives all whistleblower complaints. 
      responses:
        "405":
          description: service not avialable
      security:
        - access_token: []
  /whistleblower/complaint/{complaint_id}:
    get:
      tags:
        - Whistleblower
      summary: See the status of whistleblower complaint.
      description: This can only be done by the tokened in user.
      operationId: statusWhistleblowerComplaint
      parameters:
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
        - in: path
          name: complaint_id
          description: Created user object
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhistleblowerComplaintInfo'
        "404":
          description: ID not found
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: [] 
        
  /boardOfDirectors:
    post:
      tags:
        - Board of director
      summary: For board of director's registration.
      description: This can only be done by the logged in user.
      operationId: createBoardOfDirectorReqeust
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardOfDirectorInfo'
        description: Created insurance complaint object
        required: true
      parameters: 
        - in: header
          name: lang
          description: User's language
          allowEmptyValue: false
          schema:
            type: string
          required: true
      responses:
        "201":
          description: created successfully.
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "400":
          description: Bad input - Validation failed
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: unauthorized - token expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
        "422":
          description: Too many request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - access_token: []   

components:
  securitySchemes:
    access_token:
      type: apiKey
      description: >-
        API key to authorize requests. If you don't have the token or expired then use access_token api
        , example `fd4698c940c6d1da602a70ac34f0b147`.
      name: access_token
      in: header
  
  schemas:
    InsuranceComplaintRequest:
      type: object
      required:
        - insurance_company
        - user
      properties:
        insurance_company_name:
          type: string
        claim_number:
          type: string
        policy_number:
          type: string
        insurance_type:
          type: string
          enum:
            - Car Insurance
            - Health Insurance
            - Life Insurance
            - Travel Insurance
            - Property Insurance
        insurance_complaint_type:
          type: string
        details:
          type: string
        documents:
          type: array
          items:
            type: string
            format: binary
            description: File
        picture:
          type: string
          format: binary
        name:
          type: string
        email:
          type: string
          format: email
        nationality:
          type: string
        mobile:
          type: string
          format: phone
          example: +968 12345678
          pattern: '\+[0-9 ]+'
        id_card_copy:
          type: string
          format: binary
          
    InsuranceComplaintInfo:
       allOf:
        - $ref: '#/components/schemas/InsuranceComplaintRequest'
        - type: object
          properties:
            status:
              type: string
              enum:
                - created
                - applied
                - deleted
                - approved
                - rejected
                - failed
                - incomplete
                - processing
            complaint_id:
              type: string
   
    InjurtRequest:
      type: object
      required:
        - contact
        - details
        - id
        - id_type
        - subject
      properties:
        applicant_name:
          type: string
        description_of_applicant:
          type: string
          enum:
              - Self
              - Under-Heirs
              - Other
        other_characteristic:
          type: string
        id:
          type: string
        id_type:
          type: string
          enum:
            - Id card
            - Resident card
            - Passport
            - Driving License card
            - Other
        phone:
          type: string
          format: phone
          example: +968 12345678
          pattern: '\+[0-9 ]+'
        email:
          type: string
          format: email
        alternative_phone:
          type: string
          format: phone
        accident_date:
          type: string
          format: date
        accident_type:
          type: string
          enum:
            - Simple
            - Terrible
        damage_type:
          type: string
          enum:
            - Material
            - Bodily
            - Both
        vehicle_condition:
          type: string
        situation_description:
          type: string
        demands:
          type: string
        approx_damage_cost:
          type: string
        accident_report_of_ROP:
          type: string
          format: binary
        legal_agency:
          type: string
          format: binary
        techincal_report_issued_by_rop:
          type: string
          format: binary
        offender_vehicle_ownership:
          type: string
          format: binary
        victim_vehicle_ownership:
          type: string
          format: binary
        parties:
            type: array
            items:
              $ref: '#/components/schemas/InjuryParites'
    
    InjuryParites:
      type: object
      additionalProperties: true
      required:
         - name
         - identity_number
         - situation_type
      properties:
        name:
          type: string
        identity_number:
          type: string
        situation_type:
          type: string
          enum:
            - Injury
            - Inability
            - Dealth
        Id_card:
          type: string
          format: binary
        treatment_bill:
          type: string
          format: binary
        medical_report:
          type: string
          format: binary
          
          
          
    WhistleblowerComplaintRequest:
      type: object
      required:
        - contact
        - details
        - id
        - id_type
        - subject
      properties:
        phone:
          type: string
          format: phone
          example: +968 12345678
          pattern: '\+[0-9 ]+'
        email:
          type: string
          format: email
        office_phone:
          type: string
          format: phone
        id:
          type: string
        id_type:
          type: string
          enum:
            - Id card
            - Resident card
            - Passport
            - Driving License card
            - Other
        documents:
          type: array
          items:
            type: string
            format: binary
            description: File
        subject:
          type: string
        details:
          type: string
    WhistleblowerComplaintInfo:
       allOf:
        - $ref: '#/components/schemas/WhistleblowerComplaintRequest'
        - type: object
          properties:
            status:
              type: string
              enum:
                - created
                - applied
                - deleted
                - approved
                - rejected
                - failed
                - incomplete
                - processing
            complaint_id:
              type: string
    PushNotification:
      type: object
      required:
        - push_token
        - os
      properties:
        push_token:
          type: string
        os:
          type: string
          enum:
            - android
            - iOS
    BoardOfDirectorInfo:
      type: object
      required: 
        - id_type
        - id_number
      properties:
        picture:
          type: string
          format: binary
        id_type:
          type: string
          enum:
            - Id card
            - Resident card
            - Passport
            - Driving License card
            - Other
        id_number:
          type: string
        full_name:
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
        nationality:
          type: string
        country:
          type: string
        date_of_birth:
          type: string
          format: date
        phone:
          type: string
          format: phone
        member_job_status:
          type: string
          enum:
            - On job
            - Business owner
            - Retired
        highest_academic_qualification:
          type: string
          enum:
            - No qualification
            - Elementary
            - Preparatory
            - Professional Certificate
            - General Diploma(Secondary)
            - Diploma
            - Bachelor
            - Master
            - Doctorate
        main_major:
          type: array
          items:
            type: string
            enum:
              - Accounting
              - Business Contacts
              - Economy
              - Finance
              - Graphic Design
              - International Business Administration
              - International Relations
              - Law
              - Marketing
              - others
              - Political Science
              - Statistics
        professional_cert:
          type: string
        passport:
          type: string
          format: binary
        cv:
          type: string
          format: binary
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    
    Token:
      type: object
      properties:
        access_token:
          type: string
        expiry:
          type: string
          format: date-time
    News:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        image:
          type: string
          format: url
        publish_date:
          type: string
          format: date-time
    FAQ:
      type: object
      properties:
        section:
          type: string
        question:
          type: string
        answer:
          type: string
    Event:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        venue:
          type: string
          format: address
        image:
          type: string
          format: url
        event_date:
          type: string
          format: date
        event_time:
          type: string
          format: date-time
    
    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        redirect:
          type: boolean
        redirect_url:
          type: string
          format: url
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        exception:
          type: string
        message:
          type: string
        host:
          type: string
        endpoint:
          type: string
